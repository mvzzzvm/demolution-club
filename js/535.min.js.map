{"version":3,"file":"535.min.js","mappings":"uIAEO,SAASA,IACd,iBAAkB,MAElB,MAAMC,EAAUC,SAASC,cAAc,mBAejCC,EAAMF,SAASG,eAAe,iBAAiBC,WAAW,MAC1DC,EAAa,CACjBC,MAAO,6BACPC,KAAM,CAAC,KAAM,IAAK,IAAK,IAAK,IAAK,KACjCC,YAAa,UACbC,YAAa,GAETC,EAAa,CACjBJ,MAAO,6BACPC,KAAM,CAAC,KAAM,GAAI,IAAK,IAAK,IAAK,KAChCI,YAAa,EACbC,eAAgB,EAChBC,iBAAkB,EAClBC,iBAAkB,EAClBN,YAAa,UACbO,qBAAsB,UACtBN,YAAa,GAETX,EAAQ,IAAI,KAAMI,EAAK,CAC3Bc,KAAM,OACNT,KAAM,CACJU,OAAQ,CAAC,OAAQ,SAAU,MAAO,OAAQ,OAAQ,UAClDC,SAAU,CAACb,EAAYK,IAEzBS,QAAS,CACPC,YAAY,EACZC,QAAS,GACTC,YAAa,CACXC,WAAW,EACXC,KAAM,SAERC,QAAS,CACPC,OAAQ,CACNC,SAAS,OAKjB,IAAIC,EAmBJ,SAASC,EAAY/B,EAAOQ,EAAOC,IAenC,SAAoBT,GAKlBA,EAAMS,KAAKW,SAASY,OAAO,EAAGhC,EAAMS,KAAKW,SAASa,QAnBlDC,CAAWlC,GACXS,EAAK0B,SAASC,GAIhB,SAAiBpC,EAAOQ,EAAOC,GAK7BT,EAAMS,KAAKW,SAASiB,KAAK5B,GATH6B,CAAQtC,EAAO,EAAMoC,KAC3CpC,EAAMuC,SARNC,MAAMC,UAAUN,QAAQO,KAAKzC,EAAQ0C,UAAWC,GAC9CA,EAAOC,UAAUC,OAAO,2BAE1BhB,EAAae,UAAUE,IAAI,yBAhB7B9C,EAAQ+C,iBAAiB,SAAS,SAAUC,GAC1CnB,EAAemB,EAAEC,OAAOC,QAAQ,kBAC5BrB,EAAasB,QAAQ,2BACvBrB,EAAY/B,EAAO,EAAM,CAACO,IACjBuB,EAAasB,QAAQ,2BAC9BrB,EAAY/B,EAAO,EAAM,CAACY,IACjBkB,EAAasB,QAAQ,+BAC9BrB,EAAY/B,EAAO,EAAM,CAACO,EAAYK,IAEtCyC,IAAIC,MAAM,yBAA0BL,EAAEC","sources":["webpack://webdev/./src/js/modules/chart.js"],"sourcesContent":["import { Chart, registerables } from \"chart.js\";\r\n\r\nexport function chart() {\r\n  Chart.register(...registerables);\r\n\r\n  const buttons = document.querySelector(\".chart__buttons\");\r\n  const months = [\r\n    \"Январь\",\r\n    \"Февраль\",\r\n    \"Март\",\r\n    \"Апрель\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Сентябрь\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n  ];\r\n  const ctx = document.getElementById(\"signals-chart\").getContext(\"2d\");\r\n  const minDataset = {\r\n    label: \"Минимальный процент дохода\",\r\n    data: [400, -100, 100, 150, 500, 300],\r\n    borderColor: \"#1878C6\",\r\n    borderWidth: 3,\r\n  };\r\n  const maxDataset = {\r\n    label: \"Макимальный процент дохода\",\r\n    data: [500, -50, 200, 250, 700, 450],\r\n    pointRadius: 3,\r\n    pointHitRadius: 3,\r\n    pointHoverRadius: 3,\r\n    pointBorderWidth: 3,\r\n    borderColor: \"#5BEFCB\",\r\n    pointBackgroundColor: \"#5BEFCB\",\r\n    borderWidth: 3,\r\n  };\r\n  const chart = new Chart(ctx, {\r\n    type: \"line\",\r\n    data: {\r\n      labels: [\"Март\", \"Апрель\", \"Май\", \"Июнь\", \"Июль\", \"Август\"],\r\n      datasets: [minDataset, maxDataset],\r\n    },\r\n    options: {\r\n      responsive: true,\r\n      tension: 0.5,\r\n      interaction: {\r\n        intersect: false,\r\n        mode: \"index\",\r\n      },\r\n      plugins: {\r\n        legend: {\r\n          display: false,\r\n        },\r\n      },\r\n    },\r\n  });\r\n  let targetButton;\r\n  buttons.addEventListener(\"click\", function (e) {\r\n    targetButton = e.target.closest(\".chart__button\");\r\n    if (targetButton.matches(\".chart__min-data-button\")) {\r\n      updateChart(chart, null, [minDataset]);\r\n    } else if (targetButton.matches(\".chart__max-data-button\")) {\r\n      updateChart(chart, null, [maxDataset]);\r\n    } else if (targetButton.matches(\".chart__overall-data-button\")) {\r\n      updateChart(chart, null, [minDataset, maxDataset]);\r\n    } else {\r\n      log.error(\"Unknown dataset button\", e.target);\r\n    }\r\n  });\r\n  function updateActiveButton() {\r\n    Array.prototype.forEach.call(buttons.children, (button) =>\r\n      button.classList.remove(\"chart__button--active\")\r\n    );\r\n    targetButton.classList.add(\"chart__button--active\");\r\n  }\r\n  function updateChart(chart, label, data) {\r\n    removeData(chart);\r\n    data.forEach((set) => addData(chart, null, set));\r\n    chart.update();\r\n    updateActiveButton();\r\n  }\r\n  function addData(chart, label, data) {\r\n    // chart.data.labels.push(label);\r\n    // chart.data.datasets.forEach((dataset) => {\r\n    //     dataset.data.push(data);\r\n    // });\r\n    chart.data.datasets.push(data);\r\n    // chart.update();\r\n  }\r\n\r\n  function removeData(chart) {\r\n    // chart.data.labels.pop();\r\n    // chart.data.datasets.forEach((dataset) => {\r\n    //     dataset.data.pop();\r\n    // });\r\n    chart.data.datasets.splice(0, chart.data.datasets.length);\r\n    // chart.update();\r\n  }\r\n}"],"names":["chart","buttons","document","querySelector","ctx","getElementById","getContext","minDataset","label","data","borderColor","borderWidth","maxDataset","pointRadius","pointHitRadius","pointHoverRadius","pointBorderWidth","pointBackgroundColor","type","labels","datasets","options","responsive","tension","interaction","intersect","mode","plugins","legend","display","targetButton","updateChart","splice","length","removeData","forEach","set","push","addData","update","Array","prototype","call","children","button","classList","remove","add","addEventListener","e","target","closest","matches","log","error"],"sourceRoot":""}